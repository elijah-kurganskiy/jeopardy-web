# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input AnswerInput {
  userId: Float!
  answer: String!
  gameId: Float!
}

input CaptureQuestionInput {
  userId: Float!
  gameId: Float!
}

input CreateNewGameInput {
  creatorId: Float!
  userIds: [Int!]!
  quizId: Float!
}

input CreateUserInput {
  firstName: String!
  lastName: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Game {
  id: ID!
  creator: User!
  state: GameState!
  createdAt: DateTime!
  quiz: Quiz!
  players: [User!]!
}

type GameState {
  stateName: String!
  currentRoundId: Float!
  currentPlayerId: Float
  selectedQuestionId: Float
  answeringPlayerId: Float
  answeringPlayer: User
  answeredPlayerIds: [Int!]!
  cardSelectionAt: DateTime
  questionCaptureAt: DateTime
  openedQuestionsIds: [Int!]!
  playerScores: [PlayerScore!]!
}

type Mutation {
  createUser(data: CreateUserInput!): User!
  createGame(data: CreateNewGameInput!): Game!
  selectFirstPlayer(data: SelectFirstPlayerInput!): Game!
  selectQuestion(data: SelectQuestionInput!): Game!
  captureQuestion(data: CaptureQuestionInput!): Game!
  answer(data: AnswerInput!): Game!
}

type PlayerScore {
  playerId: Float!
  player: User!
  score: Float!
}

type Query {
  users: [User!]!
  user(id: String!): User!
  games: [Game!]!
  game(id: Float!): Game!
  quizzes: [Quiz!]!
  quiz(id: Float!): Quiz!
  round(id: Float!): Theme!
  question(id: Float!): Quiz!
}

type QuestionEntity {
  id: ID!
  type: String!
  title: String
  path: String
  answer: String!
  price: Float!
  theme: Theme!
}

type Quiz {
  id: ID!
  name: String!
  rounds: [RoundEntity!]!
}

type RoundEntity {
  id: ID!
  name: String!
  themes: [Theme!]!
}

input SelectFirstPlayerInput {
  userId: Float!
  gameId: Float!
}

input SelectQuestionInput {
  userId: Float!
  questionId: Float!
  gameId: Float!
}

type Theme {
  id: ID!
  name: String!
  questions: [QuestionEntity!]!
  round: RoundEntity!
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  games: [Game!]!
}
